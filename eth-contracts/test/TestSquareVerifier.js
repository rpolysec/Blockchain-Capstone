// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var verifier = artifacts.require('verifier.sol');

// - use the contents from proof.json generated from zokrates steps
let proof = {"proof": {
    "a": ["0x163be171c906530f2287a80013937d5fc789d27ecf9ad47d050125c3150d9251", "0x208526de6fd155433e7f4d08836c253464822d75ff79264a8cec4141f12d5fa6"],
    "b": [["0x1c9686b325d2d1fcd92fdabbd17cd4d9a2e9ff33c27e41dad0cb4926953a935b", "0x035cc9b4bfdbdbc422fa3d3e605e7d1866bac4ef3fd4dead017e5d29674987d9"], ["0x2841aa76069e3126f4471cc55e3c41415eb7d7bdc82f7d557198662e5192f54d", "0x1c8656b8c61b4e5e54d6469b8844aa85d568335b9ad2760c64a6e0332bafdb22"]],
    "c": ["0x1f9410986b83eea47300bc1f8b21a8fc5bac7cd1a8f865f9c710e835f30a69d3", "0x2f0aa81c925a64ad62cf9430527073b4efe2e0bb5aef39f4b1b91d7a1d92eab7"]
}}

contract('Verifier', function(accounts) {

    const account_one = accounts[0];
    const account_two = accounts[1];

    describe('match erc721 spec', function () {
        beforeEach(async function () { 
            this.contract = await verifier.new({from: account_one});
        })

        // Test verification with correct proof
        it('Testing verification with correct proof', async function () { 
            verifier.methods.verifyTx.call();
            
        })

        // Test verification with incorrect proof
        it('Testing verification with incorrect proof', async function () { 
            
        })

    });



    

